{"version":3,"file":"main.js","sources":["webpack:///webpack/bootstrap 18ffa2bc2b90d254742d","webpack:///src/index.js","webpack:///src/core/touch.js","webpack:///src/core/input.js","webpack:///src/core/utils.js","webpack:///src/core/selection.js","webpack:///src/key/index.js","webpack:///src/key/enter.js","webpack:///src/key/backspace.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 18ffa2bc2b90d254742d","const Touch = require('./core/touch');\nconst Input = require('./core/input');\nconst Utils = require('./core/utils');\nconst Selection = require('./core/selection');\nconst KeyDown = require('./key');\n\nclass Medit {\n  constructor(box, toolBarBox) {\n    if (!box) return;\n    this.box = box;\n    this.toolBarBox = toolBarBox;\n    this.data = [];\n    this.eleIndex = 0;\n    this.lineIndex = 0;\n    this.childIndex = 0;\n    \n    this.moveExecLength = 0; // 当前已经处理的移动光标长度\n    this.moveSingleCharLen = 24;\n    this.paragraphIndent = 4;\n    this.paragraphLastIndent = 4;\n    this.textIndent = 2;\n\n    this.init();\n    this.initLine();\n\n    \n\n    this.touch = new Touch(box, {\n      click: this.handleClick.bind(this),\n      move: this.handleTouchMove.bind(this),\n      moveEnd: this.handleTouchEnd.bind(this)\n    });\n  }\n\n  init() {\n    this._Selection = Selection;\n\n    this.container = document.createElement('div');\n    this.container.setAttribute('class', 'medit-container');\n    this.box.appendChild(this.container);\n  }\n\n  /**\n   * \n   * insertIndex 代表在第几个位置插入新行\n   */\n  initLine(insertIndex) {\n    let lineEle = document.createElement('p');\n    let index = ++this.eleIndex;\n    lineEle.setAttribute('data-meditIndex', index);\n    lineEle.style.paddingLeft = this.paragraphIndent + 'em';\n    lineEle.style.paddingRight = this.paragraphLastIndent + 'em';\n    lineEle.style.textIndent = this.textIndent + 'em';\n    if (insertIndex == null || insertIndex >= this.data.length) {\n      this.container.appendChild(lineEle);\n      this.data.push({ele: lineEle, child: [], index});\n      this.lineIndex = this.data.length - 1;\n    } else {\n      let lastEle = this.data[insertIndex].ele;\n      this.container.insertBefore(lineEle, lastEle);\n      this.data.splice(insertIndex, 0, {ele: lineEle, child: [], index});\n      this.lineIndex = insertIndex;\n    }\n  }\n\n  handleClick(posi) {\n    if (posi.target == this.box) {\n      this.insertNewSpan(this.data[this.lineIndex].child);\n    } else {\n      let indexInfo = Utils.getIndex(this.data, posi.target);\n      if (indexInfo) {\n        this.lineIndex = indexInfo.lineIndex;\n        this.childIndex = indexInfo.childIndex;\n      }\n    }\n  }\n\n  handleTouchMove(posi) {\n    \n    let nowEle =  this.data[this.lineIndex].child[this.childIndex].ele;\n    let caretPos = Selection.getCaretPos(nowEle);\n    let size = parseInt((posi.horizontalDistance - this.moveExecLength)/ this.moveSingleCharLen);\n    if (Math.abs(size) >= 1) {\n      this.moveExecLength = posi.horizontalDistance;\n      let writeInfo = Selection.getElement(this.data, this.lineIndex, this.childIndex, size, caretPos);\n      if (writeInfo) {\n        if (this.lineIndex != writeInfo.lineIndex || this.childIndex != writeInfo.childIndex) {\n          this.data[this.lineIndex].child[this.childIndex].input.blur();\n          this.lineIndex = writeInfo.lineIndex;\n          this.childIndex = writeInfo.childIndex;\n          this.data[this.lineIndex].child[this.childIndex].input.focus();\n        }\n        Selection.setCaretPos(writeInfo.ele, writeInfo.pos);\n      }\n      \n    }\n  }\n\n  handleTouchEnd() {\n    this.moveExecLength = 0;\n  }\n\n  // 失去输入光标\n  inputBlur() {\n\n  }\n\n  // 向最后插入新的一个span\n  insertNewSpan(child) {\n    let spanEle = this.initSpan(child);\n    this.childIndex = this.data[this.lineIndex].child.length - 1;\n    if (!spanEle.isOld) {\n      this.childIndex ++;\n      this.data[this.lineIndex].child.push(this.insertNewSpanInfo(spanEle));\n      this.data[this.lineIndex].ele.appendChild(spanEle.ele);\n      this.data[this.lineIndex].child[this.childIndex].input.focus();\n    } else {\n      this.data[this.lineIndex].child[this.childIndex].input.focus();\n    }\n  }\n\n\n  insertNewSpanInfo(spanEle) {\n    return {\n      ele: spanEle.ele,\n      input: new Input(spanEle.ele, {\n        blur: this.inputBlur.bind(this),\n        keydown: KeyDown.bind(this)\n      }),\n      index: spanEle.index\n    };\n  }\n\n  initSpan(child) {\n    if (child && child.length) {\n      let ele = child[child.length - 1].ele;\n      if (Utils.isNormalSpan(ele)) {\n        return {\n          isOld: true\n        };\n      }\n    }\n    let span = document.createElement('span');\n    span.setAttribute('class', 'medit-span-text');\n    let index = ++this.eleIndex;\n    span.setAttribute('data-meditIndex', index);\n    return {\n      ele: span,\n      index\n    };\n  }\n\n  render() {\n\n  }\n\n  \n}\n\nif (!window.Medit) {\n  window.medit = window.Medit = Medit;\n}\n\n\n// WEBPACK FOOTER //\n// src/index.js","/**\n * Medit Touch\n */\n\nclass Touch {\n  constructor(box, config) {\n    this.isPrevent = false;\n    this.config = config || {};\n    this.buffer = this.config.buffer || 10;\n    box.addEventListener('touchstart', this.touchStart.bind(this));\n    box.addEventListener('touchend', this.touchEnd.bind(this));\n    box.addEventListener('touchmove', this.touchMove.bind(this));\n  }\n\n  setPrevent(prevent) {\n    this.isPrevent = prevent;\n  }\n\n  _prevent(e) {\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  touchStart(e) {\n    \n    this.posi = {\n      startX: e.touches[0].pageX,\n      startY: e.touches[0].pageY,\n      endX: e.touches[0].pageX,\n      endY: e.touches[0].pageY,\n      verticalDistance: 0,\n      horizontalDistance: 0,\n      target: e.target\n    };\n  }\n\n  touchMove(e) {\n    this.posi.endX = e.touches[0].pageX;\n    this.posi.endY = e.touches[0].pageY;\n    this.posi.horizontalDistance = this.posi.endX - this.posi.startX;\n    this.posi.horizontal = this.posi.horizontalDistance > 0 ? 'right' : 'left';\n    this.posi.verticalDistance = this.posi.endY - this.posi.startY;\n    this.posi.vertical = this.posi.verticalDistance > 0 ? 'bottom' : 'top';\n    this.config.move && this.config.move(this.posi);\n  }\n\n  touchEnd(e) {\n    if (Math.abs(this.posi.verticalDistance) < this.buffer && Math.abs(this.posi.horizontalDistance) < this.buffer) {\n      this.config.click && this.config.click(this.posi);\n    } else {\n      this._prevent(e);\n      this.config.moveEnd && this.config.moveEnd(this.posi);\n    }\n  }\n};\n\n\nmodule.exports = Touch;\n\n\n// WEBPACK FOOTER //\n// src/core/touch.js","class Input {\n  constructor(ele, config) {\n    this.input = ele;\n    this.config = config || {};\n    this.input.onblur = this.blur.bind(this, true);\n    this.input.onfocus = this.focus.bind(this, true);\n    this.input.onkeydown = this.keydown.bind(this);\n  }\n\n  blur(skipBlur) {\n    if (this.input.className.indexOf('medit-span-text-edit') != -1) {\n      this.input.setAttribute('class', this.input.className.replace(' medit-span-text-edit', ''));\n    }\n    if (!skipBlur) {\n      this.config.blur && this.config.blur();\n      this.input.blur();\n    }\n  }\n\n  focus(skipFocus) {\n    this.input.setAttribute('contenteditable', true);\n    \n    if (this.input.className.indexOf('medit-span-text-edit') == -1) {\n      this.input.setAttribute('class', this.input.className + ' medit-span-text-edit');\n    }\n    if (!skipFocus) {\n      setTimeout(()=> {\n        this.input.focus();\n      }, 10);\n    }\n    \n  }\n\n  keydown(e) {\n    this.config.keydown && this.config.keydown(e, this);\n  }\n}\n\nmodule.exports = Input;\n\n\n// WEBPACK FOOTER //\n// src/core/input.js","var regNormalStyle = /(font\\-style\\s*:\\s*normal\\s*;)|(font\\-weight\\s*:\\s*normal\\s*;)|(color:\\s*rgb\\(0,\\s*0,\\s*0\\);)|(\\s*)/ig;\n\n\nlet Utils = {};\n\nUtils.isNormalSpan = (ele) => {\n  if (ele.nodeName.toLowerCase() != 'span') return false;\n  let style = ele.getAttribute('style');\n  return !style || !style.replace(regNormalStyle, '');\n}\n\nUtils.getIndex = (data, ele) => {\n  if (!ele) return;\n  let element = ele;\n  let childIndexId = ele.getAttribute(\"data-meditIndex\");\n  while(element && element.nodeName.toLowerCase() != 'p') {\n    element = element.parentNode;\n  }\n  if (!element) return;\n  let lineIndexId = element.getAttribute(\"data-meditIndex\");\n  \n  let lineIndex = 0;\n  let childIndex = 0;\n  for (let i = 0;i < data.length; i++) {\n    if (data[i].index == lineIndexId) {\n      lineIndex = i;\n      break;\n    }\n  }\n\n  let child = data[lineIndex].child;\n  for (let j = 0;j < child.length; j++) {\n    if (child[j].index == childIndexId) {\n      childIndex = j;\n      break;\n    }\n  }\n  return {\n    lineIndex,\n    childIndex\n  };\n}\n\n\nmodule.exports = Utils;\n\n\n// WEBPACK FOOTER //\n// src/core/utils.js","let Selection = {};\n\nSelection.getCaretPos = (ele) => {\n  var caretPos = 0,\n  sel, range;\n  if (window.getSelection) {\n    sel = window.getSelection();\n    if (sel.rangeCount) {\n      range = sel.getRangeAt(0);\n      if (range.commonAncestorContainer.parentNode == ele) {\n        caretPos = range.endOffset;\n      }\n    }\n  } else if (document.selection && document.selection.createRange) {\n    range = document.selection.createRange();\n    if (range.parentElement() == ele) {\n      var tempEl = document.createElement(\"span\");\n      ele.insertBefore(tempEl, ele.firstChild);\n      var tempRange = range.duplicate();\n      tempRange.moveToElementText(tempEl);\n      tempRange.setEndPoint(\"EndToEnd\", range);\n      caretPos = tempRange.text.length;\n    }\n  }\n  return caretPos;\n}\n\nSelection.setCaretPos = (node, pos) => {\n  var selection = window.getSelection();\n  var range = document.createRange();\n  range.selectNode(node);\n  range.setStart(node.childNodes[0], 0);\n  range.setEnd(node.childNodes[0], pos);\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n\n// 获取从当前元素移动size后的元素位置\nSelection.getElement = (data, lineIndex, childIndex, size, nowCaretPos) => {\n  let nowEleWidth = data[lineIndex].child[childIndex].ele.innerText.length;\n  let moveWidth = size + nowCaretPos;\n  if (moveWidth >= 0 && moveWidth <= nowEleWidth) {\n    return {\n      ele: data[lineIndex].child[childIndex].ele,\n      lineIndex: lineIndex,\n      childIndex: childIndex,\n      pos: moveWidth\n    };\n  } else if (moveWidth < 0) { // 向前移动\n    for (let l = lineIndex;l >= 0; l --) {\n      let child = data[l].child;\n      let end = child.length - 1;\n      if (l == lineIndex) {\n        end = childIndex - 1;\n      }\n      for (let c = end; c >= 0; c --) {\n        let ele = child[c].ele;\n        if (ele.className.indexOf('medit-span-text') != -1) {\n          let nowTextWidth = ele.innerText.length;\n          moveWidth += nowTextWidth;\n          if (moveWidth >= 0) {\n            return {\n              ele,\n              lineIndex: l,\n              childIndex: c,\n              pos: moveWidth + 1\n            }\n          }\n        }\n      }\n    }\n  } else { // 向后移动\n    for (let l = lineIndex; l < data.length; l ++) {\n      let child = data[l].child;\n      let start = 0;\n      if (l == lineIndex) {\n        start = childIndex;\n      }\n      for (let c = start; c < child.length; c ++) {\n        let ele = child[c].ele;\n        if (ele.className.indexOf('medit-span-text') != -1) {\n          let nowTextWidth = ele.innerText.length;\n          let temMoveWidth = moveWidth - nowTextWidth;\n          if (temMoveWidth <= 0) {\n            return {\n              ele,\n              lineIndex: l,\n              childIndex: c,\n              pos: moveWidth - 1\n            }\n          } else {\n            moveWidth -= nowTextWidth;\n          }\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = Selection;\n\n\n// WEBPACK FOOTER //\n// src/core/selection.js","const Enter = require('./enter')\nconst BackSpace = require('./backspace');\n\nconst key = function(e, inputCtx) {\n  console.log( this.childIndex, this.lineIndex)\n  if (e.key.toLowerCase() == 'enter') {\n    e.preventDefault();\n    e.stopPropagation();\n    inputCtx.blur();\n    Enter.call(this);\n  } else if (e.key.toLowerCase() == 'backspace' && this.childIndex == 0 && this.lineIndex != 0) {\n    let nowEle = this.data[this.lineIndex].child[this.childIndex].ele;\n    let caretPos = this._Selection.getCaretPos(nowEle);\n    if (caretPos == 0) {\n      e.preventDefault();\n      e.stopPropagation();\n      inputCtx.blur();\n      BackSpace.call(this);\n    }\n  }\n\n\n}\n\nmodule.exports = key;\n\n\n// WEBPACK FOOTER //\n// src/key/index.js","/**\n   * 在input中按回车键的时候\n   * 1. 如果在当前段落最后，则在此段落之后创建新的空段落\n   * 2. 如果在当前段落中间，那么先对span进行分割，创建一个同样的，内容进行分割，并把后面的所有元素扔进下一个段落\n   *  - 如果当前输入框为空，那么只处理后面的元素\n   */\nlet Enter = function() {\n  let { data, lineIndex, childIndex, _Selection: Selection } = this;\n  let nowEle =  data[lineIndex].child[childIndex].ele;\n  let caretPos = Selection.getCaretPos(nowEle);\n  let textLen = nowEle.innerText.length;\n\n  if (childIndex == data[lineIndex].child.length - 1 && caretPos == textLen) {\n    this.initLine(lineIndex + 1);\n    this.childIndex = 0;\n    this.insertNewSpan();\n  } else {\n\n    let toNextChildIndex = childIndex;\n    \n    if (caretPos != textLen && caretPos != 0) {\n      let text = nowEle.innerText;\n      let preSpanText = text.substring(0, caretPos);\n      let nextSpanText = text.substring(caretPos, textLen);\n      let cloneNode = nowEle.cloneNode();\n      let cloneNodeIndex = ++this.eleIndex;\n      cloneNode.innerText = preSpanText;\n      cloneNode.setAttribute('data-meditIndex', cloneNodeIndex);\n      nowEle.innerText = nextSpanText;\n      nowEle.parentNode.insertBefore(cloneNode, nowEle);\n      this.data[lineIndex].child.splice(childIndex, 0, this.insertNewSpanInfo({ele: cloneNode, index: cloneNodeIndex}));\n      toNextChildIndex = childIndex + 1;\n    } else if (caretPos == textLen) {\n      toNextChildIndex = childIndex + 1;\n    }\n\n\n    this.initLine(lineIndex + 1);\n    this.data[this.lineIndex].child = this.data[this.lineIndex - 1].child.splice(toNextChildIndex);\n\n    this.data[this.lineIndex].child.map(child => {\n      child.ele.parentNode.removeChild(child.ele);\n      this.data[this.lineIndex].ele.appendChild(child.ele);\n    });\n    this.childIndex = 0;\n    this.data[this.lineIndex].child[0].input.focus();\n    \n  }\n\n  console.log(this.data);\n}\nmodule.exports = Enter;\n\n\n// WEBPACK FOOTER //\n// src/key/enter.js","let BackSpace = function() {\n  let p = this.data[this.lineIndex];\n  this.data.splice(this.lineIndex, 1);\n  let lastP = this.data[this.lineIndex - 1];\n  this.childIndex = lastP.child.length;\n  p.child.map(child => {\n    lastP.ele.appendChild(child.ele);\n    lastP.child.push(child);\n  });\n  p.ele.parentNode.removeChild(p.ele);\n  this.lineIndex = this.lineIndex - 1;\n\n  this.data[this.lineIndex].child[this.childIndex].input.focus();\n}\n\nmodule.exports = BackSpace;\n\n\n// WEBPACK FOOTER //\n// src/key/backspace.js"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AACA;AAGA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AAQA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;AAEA;;;;;;AAOA;AACA;AACA;;;;;;;;;;;;;ACjKA;;;;AAIA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AACA;AACA;AAEA;;;;;;;;;;;;;ACzDA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA;AACA;AACA;;;;;;AAGA;;;;;;;;;ACtCA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAEA;;;;;;;;;AC5CA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACpGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;;;;;;;;;ACxBA;;;;;;AAMA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A","sourceRoot":""}